(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{343:function(t,a,s){"use strict";s.r(a);var e=s(10),r=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"roman-to-integer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#roman-to-integer"}},[t._v("#")]),t._v(" Roman to Integer")]),t._v(" "),a("h2",{attrs:{id:"question"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#question"}},[t._v("#")]),t._v(" Question")]),t._v(" "),a("p",[t._v("Roman numerals are represented by seven different symbols: "),a("code",[t._v("I")]),t._v(", "),a("code",[t._v("V")]),t._v(", "),a("code",[t._v("X")]),t._v(", "),a("code",[t._v("L")]),t._v(", "),a("code",[t._v("C")]),t._v(", "),a("code",[t._v("D")]),t._v(" and "),a("code",[t._v("M")]),t._v(".")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Symbol")]),t._v(" "),a("th",[t._v("Value")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("I")]),t._v(" "),a("td",[t._v("1")])]),t._v(" "),a("tr",[a("td",[t._v("V")]),t._v(" "),a("td",[t._v("5")])]),t._v(" "),a("tr",[a("td",[t._v("X")]),t._v(" "),a("td",[t._v("10")])]),t._v(" "),a("tr",[a("td",[t._v("L")]),t._v(" "),a("td",[t._v("50")])]),t._v(" "),a("tr",[a("td",[t._v("C")]),t._v(" "),a("td",[t._v("100")])]),t._v(" "),a("tr",[a("td",[t._v("D")]),t._v(" "),a("td",[t._v("50")])]),t._v(" "),a("tr",[a("td",[t._v("M")]),t._v(" "),a("td",[t._v("1000")])])])]),t._v(" "),a("p",[t._v("For example, "),a("code",[t._v("2")]),t._v(" is written as "),a("code",[t._v("II")]),t._v(" in Roman numeral, just two ones added together. "),a("code",[t._v("12")]),t._v(" is written as "),a("code",[t._v("XII")]),t._v(", which is simply "),a("code",[t._v("X + II")]),t._v(". The number "),a("code",[t._v("27")]),t._v(" is written as "),a("code",[t._v("XXVII")]),t._v(", which is "),a("code",[t._v("XX + V + II")]),t._v(".")]),t._v(" "),a("p",[t._v("Roman numerals are usually written largest to smallest from left to right. However, the numeral for four is not "),a("code",[t._v("IIII")]),t._v(". Instead, the number four is written as "),a("code",[t._v("IV")]),t._v(". Because the one is before the five we subtract it making four. The same principle applies to the number nine, which is written as "),a("code",[t._v("IX")]),t._v(". There are six instances where subtraction is used:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("I")]),t._v(" can be placed before "),a("code",[t._v("V")]),t._v(" (5) and "),a("code",[t._v("X")]),t._v(" (10) to make 4 and 9.")]),t._v(" "),a("li",[a("code",[t._v("X")]),t._v(" can be placed before "),a("code",[t._v("L")]),t._v(" (50) and "),a("code",[t._v("C")]),t._v(" (100) to make 40 and 90.")]),t._v(" "),a("li",[a("code",[t._v("C")]),t._v(" can be placed before "),a("code",[t._v("D")]),t._v(" (500) and "),a("code",[t._v("M")]),t._v(" (1000) to make 400 and 900.")])]),t._v(" "),a("p",[t._v("Given a roman numeral, convert it to an integer.")]),t._v(" "),a("h4",{attrs:{id:"example-1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-1"}},[t._v("#")]),t._v(" Example 1")]),t._v(" "),a("p",[t._v("Input: "),a("code",[t._v('s = "III"')]),t._v(" "),a("br"),t._v("\nOutput: "),a("code",[t._v("3")]),t._v(" "),a("br")]),t._v(" "),a("h4",{attrs:{id:"example-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-2"}},[t._v("#")]),t._v(" Example 2")]),t._v(" "),a("p",[t._v("Input: "),a("code",[t._v("S = LVIII")]),t._v(" "),a("br"),t._v("\nOutput: "),a("code",[t._v("58")]),t._v(" "),a("br"),t._v("\nExplanation: L = 50, V= 5, III = 3.")]),t._v(" "),a("h4",{attrs:{id:"example-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-3"}},[t._v("#")]),t._v(" Example 3")]),t._v(" "),a("p",[t._v("Input: "),a("code",[t._v("S = MCMXCIV")]),t._v(" "),a("br"),t._v("\nOutput: "),a("code",[t._v("1994")]),t._v(" "),a("br"),t._v("\nExplanation: M = 1000, CM = 900, XC = 90 and IV = 4")]),t._v(" "),a("h4",{attrs:{id:"constraints"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#constraints"}},[t._v("#")]),t._v(" Constraints:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("1 <= s.length <= 15")])]),t._v(" "),a("li",[a("code",[t._v("s")]),t._v(" contains only the characters "),a("code",[t._v("('I', 'V', 'X', 'L', 'C', 'D', 'M')")]),t._v(".")]),t._v(" "),a("li",[t._v("It is guaranteed that "),a("code",[t._v("s")]),t._v(" is a valid roman numeral in the range "),a("code",[t._v("[1, 3999]")]),t._v(".")])]),t._v(" "),a("h2",{attrs:{id:"solutions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#solutions"}},[t._v("#")]),t._v(" Solutions")]),t._v(" "),a("h3",{attrs:{id:"intuition"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#intuition"}},[t._v("#")]),t._v(" Intuition")]),t._v(" "),a("p",[t._v("To solve this problem, we need to create a hash table, the characters in which will correspond to a certain number.")]),t._v(" "),a("h3",{attrs:{id:"approach"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#approach"}},[t._v("#")]),t._v(" Approach")]),t._v(" "),a("ol",[a("li",[t._v("Loop through the Roman.")]),t._v(" "),a("li",[t._v("Set if statement for special occasions..")]),t._v(" "),a("li",[t._v("Sum the integers.")])]),t._v(" "),a("h3",{attrs:{id:"complexity-analysis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#complexity-analysis"}},[t._v("#")]),t._v(" Complexity Analysis")]),t._v(" "),a("ul",[a("li",[t._v("Time Complexity: "),a("strong",[a("em",[t._v("O(n)")])])]),t._v(" "),a("li",[t._v("Space Complexity: "),a("strong",[a("em",[t._v("O(1)")])])])]),t._v(" "),a("code-group",[a("code-block",{attrs:{title:"JavaScript"}},[a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @param {string} s\n * @return {number}\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("romanToInt")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("s")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" translations "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'M'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'D'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'C'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'L'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'X'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'V'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'I'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n  \n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" curr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" translations"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" next "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" translations"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("curr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" next"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" next "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" curr\n            i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" curr\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result\n    \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])],1),t._v(" "),a("br"),t._v(" "),a("br"),t._v(" "),a("TagLinks"),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Let's make the world a better place together :)\n")])])])],1)}),[],!1,null,null,null);a.default=r.exports}}]);